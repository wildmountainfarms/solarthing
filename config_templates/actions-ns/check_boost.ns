scope : queue {
  // The expression will evaluate to either [], [true], or [false]
  init-exp is_normal_voltage : eq(rover-boost-voltage(fragment=2), const(148))

  act set_normal : race {
    racer(any : not : ref is_normal_voltage) : call set_normal_command
    racer(any : ref is_normal_voltage) : log("Boost voltage is normal!", debug=true)
    racer(pass) : log "Rover not found!"
  }
  act set_equalize : race {
    racer(any : not : ref is_normal_voltage) : log("Already equalizing", debug=true)
    racer(any : ref is_normal_voltage) : call set_equalize_command
    racer(pass) : log "Rover not found!"
  }
  act set_normal_command : sendopen(
    directory=".data/keys",
    targets=[2],
    sender="nasplex",
    data=data(
      type="requestcommand",
      command="SET BOOST NORMAL"
    ),
  )
  act set_equalize_command : sendopen(
    directory=".data/keys",
    targets=[2],
    sender="nasplex",
    data=data(
      type="requestcommand",
      command="SET BOOST EQUALIZE"
    )
  )
  act check : race {
    racer(fx-operational(mode="eq")) : call set_equalize
    racer(fx-operational(mode="eq", not=true)) : call set_normal
    racer(pass) : log "There must be no FX devices!"
  }

  with-lock("check_boost", ontimeout=log "Something else had a lock on check_boost") : call check
}
