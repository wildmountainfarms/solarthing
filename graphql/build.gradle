buildscript {
    ext {
        // https://github.com/spring-projects/spring-boot/wiki#release-notes
        // https://github.com/spring-projects/spring-boot/releases
        springBootVersion = '2.6.6'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

version = '0.0.1-SNAPSHOT'
//project.ext.mainClass = "me.retrodaredevil.solarthing.graphql.SolarThingApplication" // This isn't doing anything?

compileJava {
    // TODO We don't need the -parameters compiler argument (I don't think), plus now that Java 11 is required for GraphQL, what does it do/is it needed if we did need it?
    options.compilerArgs << '-parameters' // we don't want to use have to put @GraphQLArgument everywhere
}

dependencies {
//    implementation "com.fasterxml.jackson.module:jackson-module-jsonSchema:$jacksonVersion" // I don't remember why we needed this
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    // https://mvnrepository.com/artifact/com.graphql-java/graphql-java-spring-boot-starter-webmvc
    implementation 'com.graphql-java:graphql-java-spring-boot-starter-webmvc:2.0'

//    implementation 'com.graphql-java:graphql-java:14.0' graphql-spqr adds this dependency
    implementation 'io.leangen.graphql:spqr:0.12.1' // https://github.com/leangen/graphql-spqr/releases

    // Although we don't need this dependency, we need to bump the version so that couchdb has the version it needs
    api group: 'com.squareup.okhttp3', name: 'okhttp', version: "$okhttpVersion"

    // This is necessary to bump the jackson version to whatever SolarThing is using
    api "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    api "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    api "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
}
jar {
    enabled = true
}
bootRun {
    workingDir = new File("../program/graphql")
}

processResources {
    dependsOn(":web:build")
    from("$rootDir/web/build") {
        into("static")
    }
}

task generateSchema(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    // Used to generate schema to file
    mainClass = "me.retrodaredevil.solarthing.rest.graphql.OutputSchemaMain"
    // workingDir is implicitly /graphql
    args = ["../web/schema.graphqls"]
}
