plugins {
    id 'com.github.johnrengelman.shadow' version "$shadowVersion"
    id 'java'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

version '0.0.1-SNAPSHOT'

project.ext.mainClassName = "me.retrodaredevil.solarthing.program.SolarMain"

dependencies {
    implementation "com.github.retrodaredevil.io-lib:jSerialComm:$ioLibVersion"
    // for InfluxDB 1.X
    implementation "org.influxdb:influxdb-java:2.23"
    // for InfluxDB 2.0 // https://github.com/influxdata/influxdb-client-java/releases
    implementation "com.influxdb:influxdb-client-java:6.10.0"

    implementation "org.apache.logging.log4j:log4j-core:$log4jVersion" // used for our custom error handler, otherwise not a necessary dependency
    implementation "org.apache.logging.log4j:log4j-jcl:$log4jVersion" // commons logging bridge.
    implementation "org.apache.logging.log4j:log4j-slf4j2-impl:$log4jVersion"

    // https://github.com/slackapi/java-slack-sdk/releases
    implementation "com.slack.api:slack-api-client:1.38.0"
    // https://mvnrepository.com/artifact/org.java-websocket/Java-WebSocket
    implementation "org.java-websocket:Java-WebSocket:1.5.5"

    // TODO Remove jewelcli dependency and transition to commons-cli
    // https://mvnrepository.com/artifact/com.lexicalscope.jewelcli/jewelcli
    implementation "com.lexicalscope.jewelcli:jewelcli:0.8.9"

    // https://mvnrepository.com/artifact/commons-cli/commons-cli
    implementation "commons-cli:commons-cli:1.9.0"

    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'
    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-jul
    implementation "org.apache.logging.log4j:log4j-jul:$log4jVersion"

    implementation "info.debatty:java-string-similarity:2.0.0"

    // TODO do we need this dependency?
    implementation "biz.paluch.logging:logstash-gelf:1.15.1"

    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation "com.google.guava:guava:33.3.1-jre"
}

shadowJar {
    mergeServiceFiles()
    manifest {
        attributes 'Main-Class': project.mainClassName
        attributes 'Multi-Release': true
    }
}

